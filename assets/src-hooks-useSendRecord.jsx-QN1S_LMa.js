const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/src-controller-groq.js-BxbD8Ouf.js","assets/src-lib-myUtils.js-B2cOH3lS.js","assets/src-controller-serverSource.js-CvKvoeyF.js","assets/src-controller-CRUDFirestore.js-CzSyH2vU.js","assets/pnpm-react-syntax-highlighter@15.5.0_react@18.3.1--DZvnRHEN.js","assets/pnpm-react@18.3.1--FUz9cRTN.js","assets/pnpm-@babel_runtime@7.25.0--CyFcdsuD.js","assets/pnpm-refractor@3.6.0--CXVGWoH1.js","assets/pnpm-hastscript@6.0.0--DUsoOKIx.js","assets/pnpm-property-information@5.6.0--BaUulPWZ.js","assets/pnpm-xtend@4.0.2--CeaPpq3n.js","assets/pnpm-space-separated-tokens@1.1.5--CMBzgJJ4.js","assets/pnpm-comma-separated-tokens@1.0.8--DgTuumFk.js","assets/pnpm-hast-util-parse-selector@2.2.5--Cqsfuk9Y.js","assets/pnpm-parse-entities@2.0.0--Cz6FRF7l.js","assets/pnpm-character-entities-legacy@1.1.4--BW45UVHJ.js","assets/pnpm-character-reference-invalid@1.1.4--AKrgFUtc.js","assets/pnpm-is-decimal@1.0.4--Dxw1ZLrO.js","assets/pnpm-is-hexadecimal@1.0.4--Bc6OsCR9.js","assets/pnpm-is-alphanumerical@1.0.4--VupdbT_8.js","assets/pnpm-is-alphabetical@1.0.4--BlcIJk-E.js","assets/pnpm-prismjs@1.27.0--l2mXeTxv.js"])))=>i.map(i=>d[i]);
import{_ as g}from"./pnpm-react-syntax-highlighter@15.5.0_react@18.3.1--DZvnRHEN.js";import{u as U}from"./src-store-appStore.js-CAdzJ0y8.js";import{u as y}from"./src-store-useRecordStore.js-D01Ec73m.js";import{u as h}from"./pnpm-zustand@4.5.4_@types_react@18.3.3_react@18.3.1--EhdkWrrw.js";import{u as C}from"./src-hooks-useSubmitGroq.jsx-BuPKGN4u.js";import{t as E}from"./src-components-ui-use-toast.js-w7cDmHIs.js";import{r as i}from"./pnpm-react@18.3.1--FUz9cRTN.js";import{u as D}from"./pnpm-react-i18next@15.0.1_i18next@23.12.2_react-dom@18.3.1_react@18.3.1__react@18.3.1--C-fP4VmU.js";const K=(r,l)=>{const[f,s,a,p,m,n]=y(h(e=>[e.setIsRecording,e.setIsRecordingStart,e.setHaveRecord,e.setTranscriptionProgress,e.setGettingUrlProgress,e.setIsPlayRecord])),[S]=U(h(e=>[e.userId])),w=C(),{t:T}=D(),o=i.useRef(null),c=i.useRef([]),R=i.useRef();return{handleCancel:()=>{s(!1),a(!1)},handleStartRecording:async()=>{try{const e=await navigator.mediaDevices.getUserMedia({audio:!0});o.current=new MediaRecorder(e,{mimeType:"audio/webm; codecs=opus"}),o.current.ondataavailable=t=>{c.current.push(t.data)},o.current.onstop=async()=>{const t=new Blob(c.current,{type:"audio/webm; codecs=opus"}),d=URL.createObjectURL(t);r.current.src=d,c.current=[],R.current=t},o.current.start(),s(!0)}catch(e){console.log(e),E({description:T("microphone_allow_false"),duration:2e3})}},handleStopRecording:()=>{o.current.stop(),s(!1),a(!0)},handlePlayRecordResult:()=>{r.current.paused?(n(!0),r.current.play()):(n(!1),r.current.pause())},handleEndedRecordResult:()=>{n(!1)},handleTimeUpdateRecordResult:()=>{const e=100/r.current.duration*r.current.currentTime;l.current.value=e},handleSeekBarChangeRecordResult:()=>{const e=r.current.duration*(l.current.value/100);r.current.currentTime=e},handleSendRecord:async()=>{n(!1),f(!1),a(!1),p(!0);const e=new FormData;e.append("audio",R.current,`${S}-recording.webm`),e.append("jsonData",JSON.stringify({apiKeyIndex:localStorage.getItem("senAi-user")}));const{getGroqTranscription:t}=await g(async()=>{const{getGroqTranscription:u}=await import("./src-controller-groq.js-BxbD8Ouf.js");return{getGroqTranscription:u}},__vite__mapDeps([0,1,2])),{addNewVoiceChatToFireStorage:d}=await g(async()=>{const{addNewVoiceChatToFireStorage:u}=await import("./src-controller-CRUDFirestore.js-CzSyH2vU.js");return{addNewVoiceChatToFireStorage:u}},__vite__mapDeps([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,2,1])),_=await t(e);p(!1),m(!0);const{downloadUrl:I,audioFileName:v}=await d(e);m(!1),w({text:_,downloadUrl:I,audioFileName:v},"audio")}}};export{K as u};
