import{_ as h}from"./pnpm-react-syntax-highlighter@15.5.0_react@18.3.1--DZvnRHEN.js";import{f as w,a as T,b as N,c as S,d as E,e as C,g as P,h as A,i as I,j as O,k as D,l as _,m as b}from"./src-controller-serverSource.js-BxsbMKjs.js";import{fetchJson as a,resetLocalStorage as $}from"./src-lib-myUtils.js-dn8px5wY.js";import"./pnpm-react@18.3.1--FUz9cRTN.js";import"./pnpm-@babel_runtime@7.25.0--CyFcdsuD.js";import"./pnpm-refractor@3.6.0--CXVGWoH1.js";import"./pnpm-hastscript@6.0.0--DUsoOKIx.js";import"./pnpm-property-information@5.6.0--BaUulPWZ.js";import"./pnpm-xtend@4.0.2--CeaPpq3n.js";import"./pnpm-space-separated-tokens@1.1.5--CMBzgJJ4.js";import"./pnpm-comma-separated-tokens@1.0.8--DgTuumFk.js";import"./pnpm-hast-util-parse-selector@2.2.5--Cqsfuk9Y.js";import"./pnpm-parse-entities@2.0.0--Cz6FRF7l.js";import"./pnpm-character-entities-legacy@1.1.4--BW45UVHJ.js";import"./pnpm-character-reference-invalid@1.1.4--AKrgFUtc.js";import"./pnpm-is-decimal@1.0.4--Dxw1ZLrO.js";import"./pnpm-is-hexadecimal@1.0.4--Bc6OsCR9.js";import"./pnpm-is-alphanumerical@1.0.4--VupdbT_8.js";import"./pnpm-is-alphabetical@1.0.4--BlcIJk-E.js";import"./pnpm-prismjs@1.27.0--l2mXeTxv.js";const j=async t=>{const e=await a(P,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t})});if(e.status===200||e.status===404)return e.userExist;console.log(e)},r=async()=>{if(localStorage.getItem("senAi-userId")){const t=localStorage.getItem("senAi-userId");return await j(t)?t:(localStorage.removeItem("senAi-userId"),r())}else{$();const{getDeviceName:t,getDeviceType:e}=await h(async()=>{const{getDeviceName:u,getDeviceType:g}=await import("./src-lib-myUtils.js-dn8px5wY.js");return{getDeviceName:u,getDeviceType:g}},[]),{generateTimeNow:s}=await h(async()=>{const{generateTimeNow:u}=await import("./src-lib-generateTime.js-DFXwsD9v.js");return{generateTimeNow:u}},[]),o=t(),n=e(),{day:i,monthName:c,year:l,hour:d,minute:m,second:p}=s(),f=`${i} ${c} ${l} , ${d}:${m}:${p}`,y=await a(N,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({deviceName:o,deviceType:n,lastSeen:f})});if(y.status===201)return y.newUserId;console.log(y)}},U=async t=>{const e=await a(A,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t})});if(e.status===200)return e.chats;if(e.status===404){const s=await r();return await U(s)}else console.log(e)},J=async t=>{const e=await a(I,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t})});if(e.status===200)return e.chatsMemory;if(e.status===404){const s=await r();return J(s)}else console.log(e)},v=async(t,e,s)=>{const o=await a(D,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t,newChatFromUser:e,newChatFromAi:s})});if(o.status!==201)if(o.status===404){const n=r();return await v(n,e,s)}else console.log(o)},ae=async(t,e)=>{const s=await a(w,{method:"DELETE",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t,chats:e})});s.status!==202&&console.log(s)},ne=async(t,e,s)=>{const o=await a(T,{method:"DELETE",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t,someChatsNew:e,someChatsDeleted:s})});o.status!==202&&console.log(o)},F=async t=>{const e=await a(S,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t})});if(e.status===200)return e.name;if(e.status===404){const s=await r();return await F(s)}else console.log(e)},L=async(t,e)=>{const s=await a(_,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t,newName:e})});if(s.status===202)return s;if(s.status===404){const o=await r();return await L(o,e)}else console.log(s)},re=async t=>{const{generateTimeNow:e}=await h(async()=>{const{generateTimeNow:p}=await import("./src-lib-generateTime.js-DFXwsD9v.js");return{generateTimeNow:p}},[]),{day:s,monthName:o,year:n,hour:i,minute:c,second:l}=e(),d=`${s} ${o} ${n} , ${i}:${c}:${l}`,m=await a(O,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t,lastSeen:d})});m.status!==201&&console.log(m)},ie=async t=>{const e=await a(E,{method:"DELETE",headers:{"Content-Type":"application/json"},body:JSON.stringify({securityCode:t})});if(e.status===202||e.status===405)return e.permits;e.status===404?alert("Error : Password Collection Not Exist"):console.log(e)},ce=async(t,e,s)=>{const o=await a(C,{method:"DELETE",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t,securityCode:e,option:s})});if(o.status===202){const{chats:n,backupChats:i,lastSeenHistory:c,allCollections:l}=o.whichDelete;return`${n?"chats ,":""} ${i?"backup chats":""} ${l?"all collections":""} ${c?"and last seen history":""}`}else console.log(o)},le=async t=>{const s=await(await fetch(b,{method:"POST",body:t})).json();return s.status===201?s:s.error};export{v as addNewChatsToFirestore,r as addNewUserToFirestoreIfNotExists,le as addNewVoiceChatToFireStorage,ae as deleteAllChatsInFirestore,ce as deleteAllDataInFirestore,ne as deleteSomeChatsInFirestore,U as getAllChatsFromFirestore,J as getAllChatsMemoryFromFirestore,F as getName,ie as getPermissionToDeleteAllData,L as updateName,re as uploadSeenHistory};
