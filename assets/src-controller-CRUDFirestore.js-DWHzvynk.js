import{_ as h}from"./pnpm-react-syntax-highlighter@15.5.0_react@18.3.1--DZvnRHEN.js";import{f as P,a as w,b as T,c as S,d as E,e as N,g as C,h as O,i as A,j as I,k as D,l as U,m as b,n as _,o as $,p as j}from"./src-controller-serverSource.js-BlEMbUva.js";import{fetchJson as a,resetLocalStorage as J}from"./src-lib-myUtils.js-JOuRjfEv.js";import"./pnpm-react@18.3.1--FUz9cRTN.js";import"./pnpm-@babel_runtime@7.25.0--CyFcdsuD.js";import"./pnpm-refractor@3.6.0--CXVGWoH1.js";import"./pnpm-hastscript@6.0.0--DUsoOKIx.js";import"./pnpm-property-information@5.6.0--BaUulPWZ.js";import"./pnpm-xtend@4.0.2--CeaPpq3n.js";import"./pnpm-space-separated-tokens@1.1.5--CMBzgJJ4.js";import"./pnpm-comma-separated-tokens@1.0.8--DgTuumFk.js";import"./pnpm-hast-util-parse-selector@2.2.5--Cqsfuk9Y.js";import"./pnpm-parse-entities@2.0.0--Cz6FRF7l.js";import"./pnpm-character-entities-legacy@1.1.4--BW45UVHJ.js";import"./pnpm-character-reference-invalid@1.1.4--AKrgFUtc.js";import"./pnpm-is-decimal@1.0.4--Dxw1ZLrO.js";import"./pnpm-is-hexadecimal@1.0.4--Bc6OsCR9.js";import"./pnpm-is-alphanumerical@1.0.4--VupdbT_8.js";import"./pnpm-is-alphabetical@1.0.4--BlcIJk-E.js";import"./pnpm-prismjs@1.27.0--l2mXeTxv.js";const v=async t=>{const e=await a(C,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t})});if(e.status===200||e.status===404)return e.userExist;console.log(e)},i=async()=>{if(localStorage.getItem("senAi-userId")){const t=localStorage.getItem("senAi-userId");return await v(t)?t:(localStorage.removeItem("senAi-userId"),i())}else{J();const{getDeviceName:t,getDeviceType:e}=await h(async()=>{const{getDeviceName:u,getDeviceType:g}=await import("./src-lib-myUtils.js-JOuRjfEv.js");return{getDeviceName:u,getDeviceType:g}},[]),{generateTimeNow:s}=await h(async()=>{const{generateTimeNow:u}=await import("./src-lib-generateTime.js-DFXwsD9v.js");return{generateTimeNow:u}},[]),o=t(),n=e(),{day:r,monthName:l,year:c,hour:d,minute:p,second:y}=s(),f=`${r} ${l} ${c} , ${d}:${p}:${y}`,m=await a(T,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({deviceName:o,deviceType:n,lastSeen:f})});if(m.status===201)return m.newUserId;console.log(m)}},F=async t=>{const e=await a(O,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t})});if(e.status===200)return e.chats;if(e.status===404){const s=await i();return await F(s)}else console.log(e)},L=async t=>{const e=await a(A,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t})});if(e.status===200)return e.chatsMemory;if(e.status===404){const s=await i();return L(s)}else console.log(e)},k=async(t,e,s)=>{const o=await a(_,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t,newChatFromUser:e,newChatFromAi:s})});if(o.status!==201)if(o.status===404){const n=i();return await k(n,e,s)}else console.log(o)},le=async(t,e)=>{const s=await a(P,{method:"DELETE",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t,chats:e})});s.status!==202&&console.log(s)},ce=async(t,e,s)=>{const o=await a(w,{method:"DELETE",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t,someChatsNew:e,someChatsDeleted:s})});o.status!==202&&console.log(o)},H=async t=>{const e=await a(S,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t})});if(e.status===200)return e;if(e.status===404){const s=await i();return await H(s)}else console.log(e)},G=async(t,e)=>{const s=await a($,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t,newName:e})});if(s.status===202)return s;if(s.status===404){const o=await i();return await G(o,e)}else console.log(s)},de=async t=>{const{generateTimeNow:e}=await h(async()=>{const{generateTimeNow:y}=await import("./src-lib-generateTime.js-DFXwsD9v.js");return{generateTimeNow:y}},[]),{day:s,monthName:o,year:n,hour:r,minute:l,second:c}=e(),d=`${s} ${o} ${n} , ${r}:${l}:${c}`,p=await a(I,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t,lastSeen:d})});p.status!==201&&console.log(p)},pe=async t=>{const e=await a(E,{method:"DELETE",headers:{"Content-Type":"application/json"},body:JSON.stringify({securityCode:t})});if(e.status===202||e.status===405)return e.permits;e.status===404?alert("Error : Password Collection Not Exist"):console.log(e)},ye=async(t,e,s)=>{const o=await a(N,{method:"DELETE",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t,securityCode:e,option:s})});if(o.status===202){const{chats:n,backupChats:r,lastSeenHistory:l,allCollections:c}=o.whichDelete;return`${n?"chats ,":""} ${r?"backup chats":""} ${c?"all collections":""} ${l?"and last seen history":""}`}else console.log(o)},me=async t=>{const e=await a(j,{method:"POST",body:t});return e.status===201?e:e.error},ue=async t=>{const e=await a(D,{method:"POST",body:t});if(e.status===201)return e;console.log(e)},he=async(t,e,s,o,n)=>{const r=await a(U,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t,newPPUrl:e,newPPFileName:s,oldPPFileName:o,customPPUrl:n})});return r.status===202?!0:(console.log(r),!1)},V=async t=>{const e=await a(b,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t})});if(e.status===200)return e;if(e.status===404){const s=await i();return await V(s)}else console.log(e)};export{k as addNewChatsToFirestore,i as addNewUserToFirestoreIfNotExists,me as addNewVoiceChatToFireStorage,le as deleteAllChatsInFirestore,ye as deleteAllDataInFirestore,ce as deleteSomeChatsInFirestore,F as getAllChatsFromFirestore,L as getAllChatsMemoryFromFirestore,H as getNameAndPPUrl,V as getPPUrl,pe as getPermissionToDeleteAllData,G as updateName,he as updatePPUrlInFirestore,ue as updateProfilePhoto,de as uploadSeenHistory};
