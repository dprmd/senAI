import{_ as u}from"./pnpm-react-syntax-highlighter@15.5.0_react@18.3.1--DZvnRHEN.js";import{f as h,a as g,b as f,c as w,d as S,e as T,g as N,h as E,i as I,j as P,k as C}from"./src-controller-serverSource.js-BcBVzHki.js";import{fetchJson as a}from"./src-lib-myUtils.js-B2cOH3lS.js";import"./pnpm-react@18.3.1--FUz9cRTN.js";import"./pnpm-@babel_runtime@7.25.0--CyFcdsuD.js";import"./pnpm-refractor@3.6.0--CXVGWoH1.js";import"./pnpm-hastscript@6.0.0--DUsoOKIx.js";import"./pnpm-property-information@5.6.0--BaUulPWZ.js";import"./pnpm-xtend@4.0.2--CeaPpq3n.js";import"./pnpm-space-separated-tokens@1.1.5--CMBzgJJ4.js";import"./pnpm-comma-separated-tokens@1.0.8--DgTuumFk.js";import"./pnpm-hast-util-parse-selector@2.2.5--Cqsfuk9Y.js";import"./pnpm-parse-entities@2.0.0--Cz6FRF7l.js";import"./pnpm-character-entities-legacy@1.1.4--BW45UVHJ.js";import"./pnpm-character-reference-invalid@1.1.4--AKrgFUtc.js";import"./pnpm-is-decimal@1.0.4--Dxw1ZLrO.js";import"./pnpm-is-hexadecimal@1.0.4--Bc6OsCR9.js";import"./pnpm-is-alphanumerical@1.0.4--VupdbT_8.js";import"./pnpm-is-alphabetical@1.0.4--BlcIJk-E.js";import"./pnpm-prismjs@1.27.0--l2mXeTxv.js";const y=async()=>{if(localStorage.getItem("senAi-userId"))return localStorage.getItem("senAi-userId");{const{getDeviceName:o}=await u(async()=>{const{getDeviceName:p}=await import("./src-lib-myUtils.js-B2cOH3lS.js");return{getDeviceName:p}},[]),{generateTimeNow:e}=await u(async()=>{const{generateTimeNow:p}=await import("./src-lib-generateTime.js-DFXwsD9v.js");return{generateTimeNow:p}},[]),t=o(),{day:s,monthName:n,year:r,hour:i,minute:l,second:m}=e(),d=`${s} ${n} ${r} , ${i}:${l}:${m}`,c=await a(f,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({deviceName:t,lastSeen:d})});if(c.status===201)return c.newUserId;console.log(c)}},A=async o=>{const e=await a(N,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:o})});if(e.status===200)return await e.chats;if(e.status===404){localStorage.removeItem("senAi-userId");const t=await y();return localStorage.setItem("senAi-userId",t),await A(t)}else console.log(e)},D=async(o,e,t)=>{const s=await a(I,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:o,newChatFromUser:e,newChatFromAi:t})});if(s.status!==201)if(s.status===404){localStorage.removeItem("senAi-userId");const n=await y();return localStorage.setItem("senAi-userId",n),await D(n,e,t)}else console.log(s)},M=async(o,e)=>{const t=await a(h,{method:"DELETE",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:o,chats:e})});t.status!==202&&console.log(t)},Q=async(o,e,t)=>{const s=await a(g,{method:"DELETE",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:o,someChatsNew:e,someChatsDeleted:t})});s.status!==202&&console.log(s)},W=async o=>{const e=await a(w,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:o})});if(e.status===200)return e.name;if(e.status===404)return"Unknown";console.log(e)},X=async(o,e)=>{const t=await a(P,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:o,newName:e})});if(t.status===202)return t;t.status,console.log(t)},Y=async o=>{const{generateTimeNow:e}=await u(async()=>{const{generateTimeNow:c}=await import("./src-lib-generateTime.js-DFXwsD9v.js");return{generateTimeNow:c}},[]),{day:t,monthName:s,year:n,hour:r,minute:i,second:l}=e(),m=`${t} ${s} ${n} , ${r}:${i}:${l}`,d=await a(E,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:o,lastSeen:m})});d.status!==201&&console.log(d)},Z=async o=>{const e=await a(S,{method:"DELETE",headers:{"Content-Type":"application/json"},body:JSON.stringify({securityCode:o})});if(e.status===202||e.status===405)return e.allow;console.log(e)},ee=async(o,e,t)=>{const s=await a(T,{method:"DELETE",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:o,securityCode:e,option:t})});if(s.status===202){const{chats:n,backupChats:r,lastSeenHistory:i}=s.whichDelete;return`${n?"chats ,":""} ${r?"backup chats":""} ${i?"and last seen history":""}`}else console.log(s)},te=async o=>{const t=await(await fetch(C,{method:"POST",body:o})).json();if(t.status===201)return t;if(t.status===500)return t.error};export{D as addNewChatsToFirestore,y as addNewUserToFirestoreIfNotExists,te as addNewVoiceChatToFireStorage,M as deleteAllChatsInFirestore,ee as deleteAllDataInFirestore,Q as deleteSomeChatsInFirestore,A as getAllChatsFromFirestore,W as getName,Z as getPermissionToDeleteAllData,X as updateName,Y as uploadSeenHistory};
