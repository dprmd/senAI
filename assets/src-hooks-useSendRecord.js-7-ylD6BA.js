import{addNewVoiceChatToFireStorage as T}from"./src-controller-CRUDFirestore.js-xeEZYl9J.js";import{getGroqTranscription as v}from"./src-controller-groq.js-CKyPBlJy.js";import{getLS as I}from"./src-lib-myUtils.js-CM7Pyx7U.js";import{u as U}from"./src-store-appStore.js-PIoWTcuH.js";import{u as y}from"./src-store-useRecordStore.js-UBSn0Y6h.js";import{r as u}from"./pnpm-react@18.3.1--FUz9cRTN.js";import{u as R}from"./pnpm-zustand@4.5.4_@types_react@18.3.3_react@18.3.1--EhdkWrrw.js";import{t as C}from"./src-components-ui-use-toast.js-w7cDmHIs.js";import{u as x}from"./src-hooks-useSubmitGroq.js-CukODOiy.js";import{u as B}from"./pnpm-react-i18next@15.0.1_i18next@23.12.2_react-dom@18.3.1_react@18.3.1__react@18.3.1--C-fP4VmU.js";const $=(r,i)=>{const[h,s,a,l,m,n]=y(R(e=>[e.setIsRecording,e.setIsRecordingStart,e.setHaveRecord,e.setTranscriptionProgress,e.setGettingUrlProgress,e.setIsPlayRecord])),[g]=U(R(e=>[e.userId])),f=x(),{t:S}=B(),o=u.useRef(null),c=u.useRef([]),p=u.useRef();return{handleCancel:()=>{s(!1),a(!1)},handleStartRecording:async()=>{try{const e=await navigator.mediaDevices.getUserMedia({audio:!0});o.current=new MediaRecorder(e,{mimeType:"audio/webm; codecs=opus"}),o.current.ondataavailable=t=>{c.current.push(t.data)},o.current.onstop=async()=>{const t=new Blob(c.current,{type:"audio/webm; codecs=opus"}),d=URL.createObjectURL(t);r.current.src=d,c.current=[],p.current=t},o.current.start(),s(!0)}catch(e){console.log(e),C({description:S("microphone_allow_false"),variant:"destructive",duration:3e3})}},handleStopRecording:()=>{o.current.stop(),s(!1),a(!0)},handlePlayRecordResult:()=>{r.current.paused?(n(!0),r.current.play()):(n(!1),r.current.pause())},handleEndedRecordResult:()=>{n(!1)},handleTimeUpdateRecordResult:()=>{const e=100/r.current.duration*r.current.currentTime;i.current.value=e},handleSeekBarChangeRecordResult:()=>{const e=r.current.duration*(i.current.value/100);r.current.currentTime=e},handleSendRecord:async()=>{n(!1),h(!1),a(!1),l(!0);const e=new FormData;e.append("audio",p.current,`${g}-recording.webm`),e.append("jsonData",JSON.stringify({apiKeyIndex:I("senAi-user")}));const t=await v(e);l(!1),m(!0);const{downloadUrl:d,audioFileName:w}=await T(e);m(!1),f({text:t,downloadUrl:d,audioFileName:w},"audio")}}};export{$ as u};
