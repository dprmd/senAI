const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/src-lib-myUtils.js-B3UxZQ32.js","assets/src-components-ui-use-toast.js-w7cDmHIs.js","assets/pnpm-react@18.3.1--FUz9cRTN.js","assets/pnpm-@babel_runtime@7.25.0--CyFcdsuD.js"])))=>i.map(i=>d[i]);
import{_ as f}from"./pnpm-react-syntax-highlighter@15.5.0_react@18.3.1--DZvnRHEN.js";import{f as w,a as P,b as T,c as E,d as N,e as C,g as I,h as S,i as $,j as A,k as U,l as D,m as _,n as O,o as v}from"./src-controller-serverSource.js-q3Bpf1-e.js";import{fetchJson as a,resetLocalStorage as b}from"./src-lib-myUtils.js-B3UxZQ32.js";import{t as F}from"./src-components-ui-use-toast.js-w7cDmHIs.js";import"./pnpm-react@18.3.1--FUz9cRTN.js";import"./pnpm-@babel_runtime@7.25.0--CyFcdsuD.js";import"./pnpm-refractor@3.6.0--CXVGWoH1.js";import"./pnpm-hastscript@6.0.0--DUsoOKIx.js";import"./pnpm-property-information@5.6.0--BaUulPWZ.js";import"./pnpm-xtend@4.0.2--CeaPpq3n.js";import"./pnpm-space-separated-tokens@1.1.5--CMBzgJJ4.js";import"./pnpm-comma-separated-tokens@1.0.8--DgTuumFk.js";import"./pnpm-hast-util-parse-selector@2.2.5--Cqsfuk9Y.js";import"./pnpm-parse-entities@2.0.0--Cz6FRF7l.js";import"./pnpm-character-entities-legacy@1.1.4--BW45UVHJ.js";import"./pnpm-character-reference-invalid@1.1.4--AKrgFUtc.js";import"./pnpm-is-decimal@1.0.4--Dxw1ZLrO.js";import"./pnpm-is-hexadecimal@1.0.4--Bc6OsCR9.js";import"./pnpm-is-alphanumerical@1.0.4--VupdbT_8.js";import"./pnpm-is-alphabetical@1.0.4--BlcIJk-E.js";import"./pnpm-prismjs@1.27.0--l2mXeTxv.js";const j=async t=>{const e=await a(`${I}?userId=${t}`);if(e.status===200||e.status===404)return e.userExist;console.log(e)},J=async t=>{const e=await a(`${S}?userId=${t}`);if(e.status===200)return e.chats;if(e.status===404){const s=await i();return await J(s)}else console.log(e)},k=async t=>{const e=await a(`${$}?userId=${t}`);if(e.status===200)return e.chatsMemory;if(e.status===404){const s=await i();return k(s)}else console.log(e)},L=async t=>{const e=await a(`${T}?userId=${t}`);if(e.status===200)return e;if(e.status===404){const s=await i();return await L(s)}else console.log(e)},le=async t=>{const e=await a(`${E}?securityCode=${t}`);if(e.status===202||e.status===405)return e.permits;e.status===404?F({description:"Error : Password Collection Not Exist",duration:3e3,variant:"destructive"}):console.log(e)},i=async()=>{if(localStorage.getItem("senAi-userId")){const t=localStorage.getItem("senAi-userId");return await j(t)?t:(localStorage.removeItem("senAi-userId"),i())}else{b();const{getDeviceName:t,getDeviceType:e}=await f(async()=>{const{getDeviceName:y,getDeviceType:g}=await import("./src-lib-myUtils.js-B3UxZQ32.js");return{getDeviceName:y,getDeviceType:g}},__vite__mapDeps([0,1,2,3])),{generateTimeNow:s}=await f(async()=>{const{generateTimeNow:y}=await import("./src-lib-generateTime.js-DFXwsD9v.js");return{generateTimeNow:y}},[]),o=t(),r=e(),{day:n,monthName:l,year:c,hour:d,minute:u,second:m}=s(),h=`${n} ${l} ${c} , ${d}:${u}:${m}`,p=await a(N,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({deviceName:o,deviceType:r,lastSeen:h})});if(p.status===201)return p.newUserId;console.log(p)}},V=async(t,e,s)=>{const o=await a(_,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t,newChatFromUser:e,newChatFromAi:s})});if(o.status!==201)if(o.status===404){const r=i();return await V(r,e,s)}else console.log(o)},ce=async t=>{const e=await a(v,{method:"POST",body:t});return e.status===201?e:e.error},de=async t=>{const{generateTimeNow:e}=await f(async()=>{const{generateTimeNow:m}=await import("./src-lib-generateTime.js-DFXwsD9v.js");return{generateTimeNow:m}},[]),{day:s,monthName:o,year:r,hour:n,minute:l,second:c}=e(),d=`${s} ${o} ${r} , ${n}:${l}:${c}`,u=await a(A,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t,lastSeen:d})});u.status!==201&&console.log(u)},ue=async(t,e)=>{const s=await a(w,{method:"DELETE",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t,chats:e})});s.status!==202&&console.log(s)},me=async(t,e,s)=>{const o=await a(P,{method:"DELETE",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t,someChatsNew:e,someChatsDeleted:s})});o.status!==202&&console.log(o)},pe=async(t,e,s)=>{const o=await a(C,{method:"DELETE",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t,securityCode:e,option:s})});if(o.status===202){const{chats:r,backupChats:n,lastSeenHistory:l,allCollections:c}=o.whichDelete;return`${r?"chats ,":""} ${n?"backup chats":""} ${c?"all collections":""} ${l?"and last seen history":""}`}else console.log(o)},x=async(t,e)=>{const s=await a(O,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t,newName:e})});if(s.status===202)return s;if(s.status===404){const o=await i();return await x(o,e)}else console.log(s)},ye=async t=>{const e=await a(U,{method:"PUT",body:t});if(e.status===201)return e;console.log(e)},fe=async(t,e,s,o,r)=>{const n=await a(D,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t,newPPUrl:e,newPPFileName:s,oldPPFileName:o,customPPUrl:r})});return n.status===202?!0:(console.log(n),!1)};export{V as addNewChatsToFirestore,i as addNewUserToFirestoreIfNotExists,ce as addNewVoiceChatToFireStorage,ue as deleteAllChatsInFirestore,pe as deleteAllDataInFirestore,me as deleteSomeChatsInFirestore,J as getAllChatsFromFirestore,k as getAllChatsMemoryFromFirestore,L as getNameAndPPUrl,le as getPermissionToDeleteAllData,x as updateName,fe as updatePPUrlInFirestore,ye as updateProfilePhoto,de as uploadSeenHistory};
